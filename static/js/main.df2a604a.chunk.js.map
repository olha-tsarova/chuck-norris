{"version":3,"sources":["components/api/api.js","components/Categories/Categories.jsx","components/Header/Header.jsx","images/clipart11314801.png","components/Quotes/Quotes.jsx","App.jsx","index.js"],"names":["API_URL","Categories","setCategory","useState","categories","setCategories","useEffect","fetch","then","response","json","categoriesFromServer","className","map","category","type","onClick","Header","href","alt","src","Quotes","selectedCategory","quote","setQuote","result","value","joke","chuck","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"oQAAMA,G,MAAU,oC,iBCyDDC,EAnDI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KASA,OAPAC,qBAAU,WDEHC,MAAM,GAAD,OAAIP,EAAJ,gBACTQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UCD1BF,MAAK,SAACG,GACLN,EAAcM,QAEjB,IAGD,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,oBAAd,wBAGA,qBAAIA,UAAU,mBAAd,UACGR,EAAWS,KACV,SAACC,GAAD,OACE,6BACE,wBACEC,KAAK,SACLH,UAAU,2BACVI,QAAS,WACPd,EAAYY,IAJhB,SAOGA,KARIA,MAab,6BACE,wBACEC,KAAK,SACLH,UAAU,2BACVI,QAAS,WACPd,EAAY,KAJhB,6BChBKe,G,MAjBA,WACb,OACE,wBAAQL,UAAU,SAAlB,SACE,oBAAGA,UAAU,eAAeM,KAAK,IAAjC,UACE,qBACEC,IAAI,OACJC,IAAI,8DACJR,UAAU,uBAEZ,sBAAMA,UAAU,sBAAhB,iCCdO,G,MAAA,IAA0B,6CCOnCS,EAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,EAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KASA,OAPAlB,qBAAU,WJRL,IAAiBQ,KISZQ,EJRHf,MACJO,EAAD,UAAqCd,EAArC,4BAAgEc,GAAhE,UAAed,EAAf,YAECQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiB,GAAD,OAAYA,EAAOC,UIKtBlB,MAAK,SAACmB,GACLH,EAASG,QAEZ,CAACL,IAGF,0BAASV,UAAU,QAAnB,UACE,qBAAKA,UAAU,sBAAf,SACE,mBAAGA,UAAU,cAAb,SACGW,MAGL,qBACEH,IAAKQ,EACLT,IAAI,eACJP,UAAU,qBAUlBS,EAAOQ,aAAe,CACpBP,iBAAkB,IAGLD,QCvBAS,MAZf,WACE,MAAwC3B,mBAAS,IAAjD,mBAAOmB,EAAP,KAAyBpB,EAAzB,KAEA,OACE,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYV,YAAaA,IACzB,cAAC,EAAD,CAAQoB,iBAAkBA,EAAkBpB,YAAaA,QCR/D6B,IAASC,OAEP,cAAC,EAAD,CAAKpB,UAAU,QACfqB,SAASC,eAAe,W","file":"static/js/main.df2a604a.chunk.js","sourcesContent":["const API_URL = 'https://api.chucknorris.io/jokes';\n\nexport function getJoke(category) {\n  return fetch(\n    !category ? `${API_URL}/random` : `${API_URL}/random?category=${category}`,\n  )\n    .then((response) => response.json())\n    .then((result) => result.value);\n}\n\nexport function getCategories() {\n  return fetch(`${API_URL}/categories`)\n    .then((response) => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../api/api';\n\nimport './Categories.scss';\n\nconst Categories = ({ setCategory }) => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    getCategories()\n      .then((categoriesFromServer) => {\n        setCategories(categoriesFromServer);\n      });\n  }, []);\n\n  return (\n    <section className=\"categories\">\n      <h2 className=\"categories__title\">\n        Categories\n      </h2>\n      <ol className=\"categories__list\">\n        {categories.map(\n          (category) => (\n            <li key={category}>\n              <button\n                type=\"button\"\n                className=\"categories__list--button\"\n                onClick={() => {\n                  setCategory(category);\n                }}\n              >\n                {category}\n              </button>\n            </li>\n          ),\n        )}\n        <li>\n          <button\n            type=\"button\"\n            className=\"categories__list--button\"\n            onClick={() => {\n              setCategory('');\n            }}\n          >\n            random\n          </button>\n        </li>\n      </ol>\n    </section>\n  );\n};\n\nCategories.propTypes = {\n  setCategory: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\n\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <a className=\"header__link\" href=\"/\">\n        <img\n          alt=\"logo\"\n          src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\"\n          className=\"header__link--logo\"\n        />\n        <span className=\"header__link--title\">\n          Chuck Norris\n        </span>\n      </a>\n    </header>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/clipart11314801.600ef7d3.png\";","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getJoke } from '../api/api';\n\nimport './Quotes.scss';\nimport chuck from '../../images/clipart11314801.png';\n\nconst Quotes = ({ selectedCategory }) => {\n  const [quote, setQuote] = useState('');\n\n  useEffect(() => {\n    getJoke(selectedCategory)\n      .then((joke) => {\n        setQuote(joke);\n      });\n  }, [selectedCategory]);\n\n  return (\n    <section className=\"quote\">\n      <div className=\"quote__text-wrapper\">\n        <p className=\"quote__text\">\n          {quote}\n        </p>\n      </div>\n      <img\n        src={chuck}\n        alt=\"chuck norris\"\n        className=\"quote__image\"\n      />\n    </section>\n  );\n};\n\nQuotes.propTypes = {\n  selectedCategory: PropTypes.string,\n};\n\nQuotes.defaultProps = {\n  selectedCategory: '',\n};\n\nexport default Quotes;\n","import './App.scss';\nimport React, { useState } from 'react';\nimport Categories from './components/Categories/Categories';\nimport Header from './components/Header/Header';\nimport Quotes from './components/Quotes/Quotes';\n\nfunction App() {\n  const [selectedCategory, setCategory] = useState('');\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Categories setCategory={setCategory} />\n      <Quotes selectedCategory={selectedCategory} setCategory={setCategory} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App className=\"app\" />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}